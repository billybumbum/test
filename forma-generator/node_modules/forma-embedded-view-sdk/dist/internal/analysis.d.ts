import { IframeMessenger } from "./iframe-messenger.js";
export type Analysis = {
    analysisId: string;
    analysisType: string;
    createdAt: number;
    elementUrn: string;
    proposalId: string;
    proposalRevision: string;
    status: string;
    updatedAt: number;
};
export type ListAnalysesRequest = {
    /**
     * Authcontext to use with the request.
     *
     * As of now, only the currently open project is supported as
     * authcontext when using the SDK.
     *
     * @defaultValue The currently open project.
     */
    authcontext?: string | undefined;
    elementUrnPrefix?: string | undefined;
    analysisTypes?: string[] | undefined;
};
export type ListAnalysesResponse = Analysis[];
export type AnalysisGroundGridRequest = {
    analysis: Analysis;
};
type Scale = {
    x: number;
    y: number;
};
export type AnalysisGroundGridResponse = {
    grid: Float32Array | Uint8Array;
    mask?: Uint8Array;
    width: number;
    height: number;
    x0: number;
    y0: number;
    scale: Scale;
};
export declare class AnalysisApi {
    #private;
    constructor(iframeMessenger: IframeMessenger);
    list(request: ListAnalysesRequest): Promise<ListAnalysesResponse>;
    getGroundGrid(request: AnalysisGroundGridRequest): Promise<AnalysisGroundGridResponse>;
}
export {};
