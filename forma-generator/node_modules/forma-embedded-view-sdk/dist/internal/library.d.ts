import { IframeMessenger } from "./iframe-messenger.js";
type Status = "success" | "failed" | "pending";
export type LibraryItem = {
    authContext: string;
    id: string;
    name: string;
    status: Status;
    updatedAt: number;
    urn?: string;
};
export type CreateLibraryItemRequest = {
    /**
     * Authcontext to use with the request.
     *
     * As of now, only the currently open project is supported as
     * authcontext when using the SDK.
     *
     * @defaultValue The currently open project.
     */
    authcontext?: string | undefined;
    data: {
        name: string;
        status: Status;
        urn?: string;
    };
};
export type UpdateLibraryItemRequest = {
    /**
     * Authcontext to use with the request.
     *
     * As of now, only the currently open project is supported as
     * authcontext when using the SDK.
     *
     * @defaultValue The currently open project.
     */
    authcontext?: string | undefined;
    id: string;
    data: {
        name: string;
        status: Status;
        urn?: string;
    };
};
export type DeleteLibraryItemRequest = {
    /**
     * Authcontext to use with the request.
     *
     * As of now, only the currently open project is supported as
     * authcontext when using the SDK.
     *
     * @defaultValue The currently open project.
     */
    authcontext?: string | undefined;
    id: string;
};
export declare class LibraryApi {
    #private;
    constructor(iframeMessenger: IframeMessenger);
    createItem({ authcontext, data, }: CreateLibraryItemRequest): Promise<LibraryItem>;
    updateItem({ authcontext, id, data, }: UpdateLibraryItemRequest): Promise<LibraryItem>;
    deleteItem({ authcontext, id, }: DeleteLibraryItemRequest): Promise<void>;
}
export {};
