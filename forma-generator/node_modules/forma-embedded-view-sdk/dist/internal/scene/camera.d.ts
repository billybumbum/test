import { IframeMessenger } from "../iframe-messenger.js";
export type CameraMoveRequest = {
    position: {
        x: number;
        y: number;
        z: number;
    };
    target?: {
        x: number;
        y: number;
        z: number;
    } | undefined;
    zoom?: number | undefined;
    transitionTimeMs?: number | undefined;
};
export type CameraCaptureRequest = {
    width: number;
    height: number;
};
export type CameraGetCurrentResponse = {
    position: {
        x: number;
        y: number;
        z: number;
    };
    target: {
        x: number;
        y: number;
        z: number;
    };
    type: "perspective" | "orthographic";
};
export declare class CameraApi {
    #private;
    constructor(iframeMessenger: IframeMessenger);
    move({ position, target, zoom, transitionTimeMs, }: CameraMoveRequest): Promise<void>;
    switchPerspective(): Promise<void>;
    capture({ width, height }: CameraCaptureRequest): Promise<HTMLCanvasElement>;
    getCurrent(): Promise<CameraGetCurrentResponse>;
}
