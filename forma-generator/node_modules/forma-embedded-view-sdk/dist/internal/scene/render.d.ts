import { IframeMessenger } from "../iframe-messenger.js";
/** Column-major 4x4 matrix. Translation values use metres as unit. */
type Transform = [
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number
];
export type RenderApiAddMeshRequest = {
    geometryData: {
        position: Float32Array;
        uv?: Float32Array | undefined;
        normal?: Float32Array | undefined;
        index?: number[] | undefined;
        color?: Uint8Array | undefined;
    };
    transform?: Transform | undefined;
};
export type RenderApiAddMeshResponse = {
    id: string;
};
export type RenderApiUpdateMeshRequest = {
    id: string;
    geometryData: {
        position: Float32Array;
        uv?: Float32Array | undefined;
        normal?: Float32Array | undefined;
        index?: number[] | undefined;
        color?: Uint8Array | undefined;
    };
    transform?: Transform | undefined;
};
export type RenderApiRemoveRequest = {
    id: string;
};
export declare class RenderApi {
    #private;
    constructor(iframeMessenger: IframeMessenger);
    addMesh({ geometryData, transform, }: RenderApiAddMeshRequest): Promise<RenderApiAddMeshResponse>;
    updateMesh({ id, geometryData, transform, }: RenderApiUpdateMeshRequest): Promise<void>;
    remove(req: RenderApiRemoveRequest): Promise<void>;
    cleanup(): Promise<void>;
}
export {};
